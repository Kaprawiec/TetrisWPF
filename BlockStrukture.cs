using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TetrisWPF
{

    [Serializable]
    public class BlocksStrukture
    {
        public int[, , ,] blockTypes = new int[7, 4, 5, 5]
        {
	        {
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 0, 0, 0 }
		        },
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 0, 0, 0 }
		        },
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 0, 0, 0 }
		        },
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 1, 1, 0 },
			        { 0, 0, 0, 0, 0 }
		        }
	        },

		        // I
	        {
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 1, 1, 1, 1, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 }
		        },
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 1, 0, 0 }
		        },
		        {
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 1, 1, 1, 1, 0 },
			        { 0, 0, 0, 0, 0 },
			        { 0, 0, 0, 0, 0 }
		        },
		        {
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 1, 0, 0 },
			        { 0, 0, 0, 0, 0 }
		        }
	        }
		        ,
			        // L
		        {
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 1, 1, 0 },
				        { 0, 1, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 1, 0 },
				        { 0, 1, 1, 1, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        }
		        },
			        // L mirrored
		        {
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 0, 0, 0 },
				        { 0, 1, 1, 1, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 1, 1, 0 },
				        { 0, 0, 0, 1, 0 },
				        { 0, 0, 0, 0, 0 }
			        }
		        },
			        // N
		        {
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 1, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 1, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        }
		        },
			        // N mirrored
		        {
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 0, 1, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 0, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        }
		        },
			        // T
		        {
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 1, 1, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 1, 1, 1, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 1, 1, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        },
			        {
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 1, 0, 0 },
				        { 0, 1, 1, 1, 0 },
				        { 0, 0, 0, 0, 0 },
				        { 0, 0, 0, 0, 0 }
			        }
		        }
            };

        public int[,] tabminx = new int[7, 4]
        {
	        { 2, 2, 2, 2 },
	        { 0, 2, 0, 2 },
	        { 2, 1, 1, 1 },
	        { 1, 1, 2, 1 },
	        { 2, 1, 1, 1 },
	        { 2, 1, 1, 1 },
	        { 2, 1, 1, 1 },
        };
        public int[,] tabmaxx = new int[7, 4]
        {
	        { 3, 3, 3, 3 },
	        { 3, 2, 3, 2 },
	        { 3, 3, 2, 3 },
	        { 2, 3, 3, 3 },
	        { 3, 3, 2, 3 },
	        { 3, 3, 2, 3 },
	        { 3, 3, 2, 3 },
        };
        public int[,] tabmaxy = new int[7, 4]
        {
	        { 3, 3, 3, 3 },
	        { 2, 4, 2, 3 },
	        { 3, 3, 3, 2 },
	        { 3, 2, 3, 3 },
	        { 3, 3, 3, 2 },
	        { 3, 3, 3, 2 },
	        { 3, 3, 3, 2 },
        };
        public int[, ,] blockInitPos = new int[7 /*kind */, 4 /* r2otation */, 2 /* position */]
        {
	        /* Square */
	        {
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -3 }
	        },
		        /* I */
	        {
		        { -2, -2 },
		        { -2, -3 },
		        { -2, -2 },
		        { -2, -3 }
	        },
		        /* L */
	        {
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -2 }
	        },
		        /* L mirrored */
	        {
		        { -2, -3 },
		        { -2, -2 },
		        { -2, -3 },
		        { -2, -3 }
	        },
		        /* N */
	        {
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -2 }
	        },
		        /* N mirrored */
	        {
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -2 }
	        },
		        /* T */
	        {
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -3 },
		        { -2, -2 }
	        },
        };
    }
}
